using System;

namespace Snobal.Library
{
    [Serializable]
    public class SnobalCloudSettings : Utilities.SettingValues
    {
        public new static string GetFilename() => "SnobalCloudSettings";

        /// <summary>
        /// Have we paired.
        /// </summary>
        public bool Registered = false;

        /// <summary>
        /// Often the tenant company's name, but may also include a stub if a single company has projects across multiple tenants.
        /// </summary>
        public string TenantId = string.Empty;

        /// <summary>
        /// The Url used to contact the appropriate backend for this tenant.
        /// </summary>
        public string TenantURL = string.Empty;

        /// <summary>
        /// Legacy.
        /// </summary>
        public bool CachedContentComplete = false;

        /// <summary>
        /// Are the contents on device encrypted
        /// </summary>
        public bool EncryptedContents = FileIO.defaultEncryptDownloadedContent;

        /// <summary>
        /// These are generated by the backend and handed to the device so it can authenticate itself.
        /// </summary>
        public string DeviceToken = string.Empty;

        /// <summary>
        /// Legacy.
        /// </summary>
        public bool FlushEvents = true;

        /// <summary>
        /// Legacy.
        /// </summary>
        public string CachedContentExperienceName = string.Empty;

        /// <summary>
        /// Legacy.
        /// </summary>
        public long LastUpdated = 0; // unix timestamp, set to 0 to force an update

        /// <summary>
        /// Set this to "Debug" for more verbose logging, or to "Warning" or "Error" for less.
        /// </summary>
        public string MinimumLogLevel = "Info";
    }
}
